<launch>
    <!-- these are the arguments you can pass this launch file, for example paused:=true -->
    <arg name="paused" default="false"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="gui" default="true"/>
    <arg name="headless" default="false"/>
    <arg name="debug" default="true"/>
    <arg name="model" default="$(find smartcar)/urdf/car.xacro"/>
    <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="$(arg debug)" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>
    <param name="robot_description" command="$(find xacro)/xacro.py $(arg model)" />
    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-z 1.0 -unpause -urdf -model robot -param robot_description" respawn="false" output="screen" />
    <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>
    <node pkg="smartcar" type="changeScan.py" name="changeScan"/>
    <node pkg="rviz" type="rviz" name="rviz"  args="$(find smartcar)/config/cartographertest.rviz" />
    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find smartcar)/config/robotcontrol.yaml" command="load"/>
    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen"  args="
            joint_state_controller
			joint1_position_controller
			joint2_position_controller
            joint3_position_controller
            joint4_position_controller"/>
</launch>